package com.company.api;

import java.net.URI;

import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;
import org.springframework.boot.autoconfigure.domain.EntityScan;
import org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration;
import org.springframework.data.jpa.repository.config.EnableJpaRepositories;

@SpringBootApplication(exclude = { DataSourceAutoConfiguration.class })
@EnableJpaRepositories("com.company.springboot.hibernate.dao")
@EntityScan("com.company.springboot.hibernate.entity")
public class DemoApplication {

	public static void main(String[] args) {
		SpringApplication.run(DemoApplication.class, args);
		
		
		String result = "";
		  try {
		   URL httpurl = new URL("http://localhost:8082/demo/api/company/saveEmployee");
		   HttpURLConnection httpConn = (HttpURLConnection) httpurl.openConnection();
		   httpConn.setDoOutput(true);
		   httpConn.setDoInput(true);
		   httpConn.setRequestMethod("POST");
		   httpConn.setRequestProperty("Content-Language", "UTF-8");

		   httpConn.setRequestProperty("Content-Type", "application/json;charset=UTF-8");
		   httpConn.setRequestProperty("Accept", "application/json;charset=UTF-8");

		   JSONObject obj = new JSONObject();
		   JSONArray array = new JSONArray();
		   JSONObject item = new JSONObject();
		   item.put("rec_no", "1");
		   item.put("p_no", "8A0I6006BB85X");
		   item.put("sl_qty", "1");
		   array.put(item);

		   obj.put("userid", "smartc");
		   obj.put("userpw", "uap6g4buystock");
		   obj.put("sl_key_item", array);
		   System.out.println(obj.toString());
		   //{"userpw":"uap6g4buystock","userid":"smartc","sl_key_item":[{"p_no":"1WSOXPZU1002E","rec_no":"1","sl_qty":"1"}]}
		   String postParam = obj.toString();
		   if (StringUtils.isNotBlank(postParam)) {
		    httpConn.setRequestProperty("Content-Length", "" + Integer.toString(postParam.getBytes().length));
		    OutputStream out = httpConn.getOutputStream();
		    out.write(postParam.getBytes("UTF-8"));
		    out.flush();
		    out.close();
		   }
		   BufferedReader in = new BufferedReader(new InputStreamReader(httpConn.getInputStream(), "UTF-8"));

		   String line;
		   while ((line = in.readLine()) != null) {
		    result += line;
		   }
		   in.close();

		  } catch (Exception e) {
		   e.printStackTrace();
		  }
		  System.out.println(result);
		  
		  JSONObject obj = new JSONObject(result);
		  
		  HashMap<String, Object> aaa = (HashMap<String, Object>) toMap(obj);
		  
		  System.out.println(aaa.get("sl_key_item"));
		  
		  //HashMap<String, Object> bbb = (HashMap<String, Object>) toMap((JSONObject)toList((JSONArray)aaa.get("sl_key_item")));
		  
		  List<HashMap<String, Object>> bbb = (ArrayList)aaa.get("sl_key_item");
		  
		  System.out.println(bbb.get(0).get("stock_selling"));
	}

}
